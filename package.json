{
  "name": "ms-sharepoint-embedded-vscode-extension",
  "displayName": "SharePoint Embedded",
  "description": "Build SharePoint Embedded apps",
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/SharePoint-Embedded-VS-Code-Extension"
  },
  "version": "1.0.0",
  "author": "Microsoft Corporation",
  "publisher": "SharepointEmbedded",
  "preview": false,
  "icon": "media/sharepoint-embedded-icon.png",
  "engines": {
    "vscode": "^1.81.0"
  },
  "categories": [
    "Snippets",
    "Extension Packs",
    "Azure",
    "Other"
  ],
  "main": "./out/extension.js",
  "l10n": "./l10n",
  "contributes": {
    "icons": {
      "spe-m365": {
        "description": "Microsoft 365 icon in command tree view",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\ED72"
        }
      },
      "spe-logo": {
        "description": "Activity Bar logo",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\ED18"
        }
      },
      "containertype-icon": {
        "description": "Container Type icon",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\F1AA"
        }
      },
      "app-icon": {
        "description": "App icon",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\ECAA"
        }
      },
      "new-app-icon": {
        "description": "New App icon",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\EFDA"
        }
      },
      "owningapp-icon": {
        "description": "Owning App icon",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\ECAA"
        }
      },
      "container-icon": {
        "description": "Container icon",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\EED6"
        }
      },
      "ctregistration-icon": {
        "description": "Container Type Registration icon",
        "default": {
          "fontPath": "./media/fabric-icons.woff",
          "fontCharacter": "\\E902"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sharepoint-embedded",
          "title": "SharePoint Embedded",
          "icon": "$(spe-logo)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "spe-welcome",
        "contents": "Sign in with a work or school account that has the Global Administrator role to get started.\n[Sign in](command:spe.login) \n\n\n If you need an account with administrative access, you can join the [Microsoft 365 Developer Program](https://developer.microsoft.com/microsoft-365/dev-program) or create a free trial of an [Microsoft 365 E3 license](https://www.microsoft.com/microsoft-365/enterprise/microsoft365-plans-and-pricing).",
        "when": "!spe:isLoggedIn && !spe:isLoggingIn"
      },
      {
        "view": "spe-development",
        "contents": "Create an Azure Entra app registration and container type to get started.\n [Create](command:spe.ContainerTypes.createTrial) \n",
        "when": "spe:isAdmin && spe:showGettingStartedView"
      },
      {
        "view": "spe-development",
        "contents": "Failed to load your SharePoint Embedded data. \n [Retry](command:spe.refresh) \n",
        "when": "spe:isAdmin && spe:showFailedView"
      }
    ],
    "views": {
      "sharepoint-embedded": [
        {
          "id": "spe-welcome",
          "name": "Work or school account",
          "when": "!spe:isLoggedIn && !spe:isLoggingIn"
        },
        {
          "id": "spe-accounts",
          "name": "Work or school account",
          "when": "spe:isLoggedIn || spe:isLoggingIn"
        },
        {
          "id": "spe-development",
          "name": "Development",
          "when": "spe:isAdmin"
        },
        {
          "id": "spe-resources",
          "name": "Resources"
        }
      ]
    },
    "submenus": [
      {
        "id": "spe.App.Postman",
        "label": "Setup Postman collection"
      },
      {
        "id": "spe.App.SampleApps",
        "label": "Run sample apps"
      },
      {
        "id": "spe.App.SampleApps.TypeScript+React+AzureFunctions",
        "label": "TypeScript + React + Azure Functions"
      },
      {
        "id": "spe.App.SampleApps.ASPNET+C#",
        "label": "ASP.NET + C#"
      },
      {
        "id": "spe.App.Credentials",
        "label": "Credentials"
      },
      {
        "id": "spe.App.Permissions",
        "label": "Permissions"
      },
      {
        "id": "spe.App.Permissions.LocalAdminConsent",
        "label": "Local Admin Consent"
      },
      {
        "id": "spe.ContainerType.Configuration",
        "label": "Configuration"
      }
    ],
    "menus": {
      "spe.App.Postman": [
        {
          "command": "spe.App.Postman.exportEnvironmentFile",
          "group": "1@1"
        },
        {
          "command": "spe.App.Postman.copyEnvironmentFile",
          "group": "1@2"
        },
        {
          "command": "spe.App.Postman.viewDocs",
          "group": "1@3"
        }
      ],
      "spe.App.SampleApps": [
        {
          "submenu": "spe.App.SampleApps.TypeScript+React+AzureFunctions",
          "command": "spe.App.SampleApps.TypeScript+React+AzureFunctions.clone",
          "group": "1@1"
        },
        {
          "submenu": "spe.App.SampleApps.ASPNET+C#",
          "command": "spe.App.SampleApps.ASPNET+C#.clone",
          "group": "1@2"
        }
      ],
      "spe.App.Credentials": [
        {
          "command": "spe.App.Credentials.createSecret",
          "group": "1@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*-hasSecret.*/",
          "command": "spe.App.Credentials.copySecret",
          "group": "1@2"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*-hasSecret.*/",
          "command": "spe.App.Credentials.deleteSecret",
          "group": "1@3"
        },
        {
          "command": "spe.App.Credentials.createCert",
          "group": "2@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*-hasCert.*/",
          "command": "spe.App.Credentials.deleteCert",
          "group": "2@2"
        }
      ],
      "spe.App.Permissions": [
        {
          "submenu": "spe.App.Permissions.LocalAdminConsent",
          "group": "1@1"
        }
      ],
      "spe.App.Permissions.LocalAdminConsent": [
        {
          "command": "spe.App.Permissions.LocalAdminConsent.openLink",
          "group": "1@1"
        }
      ],
      "spe.ContainerType.Configuration": [
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*-discoverabilityEnabled.*/",
          "command": "spe.ContainerType.disableDiscoverability",
          "group": "1@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*-discoverabilityDisabled.*/",
          "command": "spe.ContainerType.enableDiscoverability",
          "group": "1@2"
        },
        {
          "command": "spe.ContainerType.learnMoreDiscoverability",
          "group": "1@3"
        }
      ],
      "view/item/context": [
        {
          "when": "view == spe-developmentasdfasdf",
          "command": "spe.refresh",
          "group": "last"
        },
        {
          "command": "spe.signOut",
          "when": "view == spe-accounts && viewItem == signedinM365",
          "group": "inline@1"
        },
        {
          "command": "spe.cancelSignIn",
          "when": "view == spe-accounts && viewItem == signingInM365",
          "group": "inline@1"
        },
        {
          "when": "viewItem == spe:containerTypesTreeItem",
          "command": "spe.ContainerTypes.createTrial",
          "group": "1@1"
        },
        {
          "when": "viewItem == spe:containerTypesTreeItem",
          "command": "spe.refresh",
          "group": "2@1"
        },
        {
          "when": "viewItem == spe:containerTypesTreeItem",
          "command": "spe.refresh",
          "group": "inline@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*-unregistered.*/",
          "command": "spe.ContainerType.registerOnLocalTenant",
          "group": "1@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "command": "spe.ContainerType.rename",
          "group": "2@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/ && viewItem =~ /.*-trial.*/",
          "command": "spe.ContainerType.delete",
          "group": "2@2"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "submenu": "spe.ContainerType.Configuration",
          "group": "3@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "command": "spe.ContainerType.copyId",
          "group": "4@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*-paid.*/",
          "command": "spe.ContainerType.copySubscriptionId",
          "group": "4@2"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "command": "spe.ContainerType.copyOwningTenantId",
          "group": "4@3"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "command": "spe.ContainerType.viewProperties",
          "group": "5@1"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*-paid.*/",
          "command": "spe.ContainerType.viewSubscriptionInAzure",
          "group": "5@2"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "command": "spe.refresh",
          "group": "5@3"
        },
        {
          "when": "viewItem =~ /spe:containerTypeTreeItem.*/",
          "command": "spe.refresh",
          "group": "inline@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-guest.*/",
          "command": "spe.GuestApp.editPermissions",
          "group": "1@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-local.*/",
          "submenu": "spe.App.Postman",
          "group": "2@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-local.*/",
          "submenu": "spe.App.SampleApps",
          "group": "2@2"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-local.*/",
          "command": "spe.App.rename",
          "group": "3@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-local.*/",
          "submenu": "spe.App.Credentials",
          "group": "3@2"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-local.*/",
          "submenu": "spe.App.Permissions",
          "group": "3@3"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/",
          "command": "spe.App.copyAppId",
          "group": "4@1"
        },
        {
          "when": "viewItem =~ /spe:appTreeItem.*/ && viewItem =~ /.*-local.*/",
          "command": "spe.App.viewInAzure",
          "group": "4@2"
        },
        {
          "when": "viewItem == spe:guestAppsTreeItem",
          "command": "spe.GuestApps.add",
          "group": "1@1"
        },
        {
          "when": "viewItem == spe:guestAppsTreeItem",
          "command": "spe.refresh",
          "group": "2@1"
        },
        {
          "when": "viewItem == spe:guestAppsTreeItem",
          "command": "spe.refresh",
          "group": "inline@1"
        },
        {
          "when": "viewItem == spe:containersTreeItem",
          "command": "spe.Containers.create",
          "group": "1@1"
        },
        {
          "when": "viewItem == spe:containersTreeItem",
          "command": "spe.refresh",
          "group": "2@1"
        },
        {
          "when": "viewItem == spe:containersTreeItem",
          "command": "spe.refresh",
          "group": "inline@1"
        },
        {
          "when": "viewItem =~ /spe:containerTreeItem.*/",
          "command": "spe.Container.rename",
          "group": "1@1"
        },
        {
          "when": "viewItem =~ /spe:containerTreeItem.*/",
          "command": "spe.Container.editDescription",
          "group": "1@2"
        },
        {
          "when": "viewItem =~ /spe:containerTreeItem.*/",
          "command": "spe.Container.recycle",
          "group": "1@3"
        },
        {
          "when": "viewItem =~ /spe:containerTreeItem.*/",
          "command": "spe.Container.copyId",
          "group": "2@1"
        },
        {
          "when": "viewItem =~ /spe:containerTreeItem.*/",
          "command": "spe.Container.viewProperties",
          "group": "2@2"
        },
        {
          "when": "viewItem =~ /spe:recycledContainerTreeItem.*/",
          "command": "spe.RecycledContainer.restore",
          "group": "1@1"
        },
        {
          "when": "viewItem =~ /spe:recycledContainerTreeItem.*/",
          "command": "spe.RecycledContainer.delete",
          "group": "1@2"
        },
        {
          "when": "viewItem =~ /spe:recycledContainerTreeItem.*/",
          "command": "spe.RecycledContainer.copyId",
          "group": "2@1"
        },
        {
          "when": "viewItem == spe:recycledContainersTreeItem",
          "command": "spe.refresh",
          "group": "2@1"
        },
        {
          "when": "viewItem == spe:recycledContainersTreeItem",
          "command": "spe.refresh",
          "group": "inline@1"
        },
        {
          "when": "view == false",
          "command": "spe.refresh",
          "group": "blah"
        }
      ]
    },
    "commands": [
      {
        "command": "spe.login",
        "title": "%commands.spe.login%"
      },
      {
        "command": "spe.signOut",
        "title": "%commands.spe.signOut%",
        "icon": "$(sign-out)"
      },
      {
        "command": "spe.cancelSignIn",
        "title": "%commands.spe.cancelSignIn%",
        "icon": "$(chrome-close)"
      },
      {
        "command": "spe.ContainerTypes.createTrial",
        "title": "%commands.spe.ContainerTypes.createTrial%"
      },
      {
        "command": "spe.ContainerType.registerOnLocalTenant",
        "title": "%commands.spe.ContainerType.registerOnLocalTenant%"
      },
      {
        "command": "spe.ContainerType.rename",
        "title": "%commands.spe.ContainerType.rename%"
      },
      {
        "command": "spe.ContainerType.delete",
        "title": "%commands.spe.ContainerType.delete%"
      },
      {
        "command": "spe.ContainerType.disableDiscoverability",
        "title": "%commands.spe.ContainerType.disableDiscoverability%"
      },
      {
        "command": "spe.ContainerType.enableDiscoverability",
        "title": "%commands.spe.ContainerType.enableDiscoverability%"
      },
      {
        "command": "spe.ContainerType.learnMoreDiscoverability",
        "title": "%commands.spe.ContainerType.learnMoreDiscoverability%"
      },
      {
        "command": "spe.ContainerType.copyId",
        "title": "%commands.spe.ContainerType.copyId%"
      },
      {
        "command": "spe.ContainerType.copySubscriptionId",
        "title": "%commands.spe.ContainerType.copySubscriptionId%"
      },
      {
        "command": "spe.ContainerType.copyOwningTenantId",
        "title": "%commands.spe.ContainerType.copyOwningTenantId%"
      },
      {
        "command": "spe.ContainerType.viewProperties",
        "title": "%commands.spe.ContainerType.viewProperties%"
      },
      {
        "command": "spe.ContainerType.viewSubscriptionInAzure",
        "title": "%commands.spe.ContainerType.viewSubscriptionInAzure%"
      },
      {
        "command": "spe.Apps.getOrCreate",
        "title": "%commands.spe.Apps.getOrCreate%"
      },
      {
        "command": "spe.App.clone",
        "title": "%commands.spe.App.clone%"
      },
      {
        "command": "spe.App.Postman.exportEnvironmentFile",
        "title": "%commands.spe.App.Postman.exportEnvironmentFile%"
      },
      {
        "command": "spe.App.Postman.copyEnvironmentFile",
        "title": "%commands.spe.App.Postman.copyEnvironmentFile%"
      },
      {
        "command": "spe.App.Postman.viewDocs",
        "title": "%commands.spe.App.Postman.viewDocs%"
      },
      {
        "command": "spe.App.SampleApps.TypeScript+React+AzureFunctions.clone",
        "title": "%commands.spe.App.SampleApps.TypeScript+React+AzureFunctions.clone%"
      },
      {
        "command": "spe.App.SampleApps.ASPNET+C#.clone",
        "title": "%commands.spe.App.SampleApps.ASPNET+C#.clone%"
      },
      {
        "command": "spe.App.rename",
        "title": "%commands.spe.App.rename%"
      },
      {
        "command": "spe.App.Credentials.createSecret",
        "title": "%commands.spe.App.Credentials.createSecret%"
      },
      {
        "command": "spe.App.Credentials.copySecret",
        "title": "%commands.spe.App.Credentials.copySecret%"
      },
      {
        "command": "spe.App.Credentials.deleteSecret",
        "title": "%commands.spe.App.Credentials.deleteSecret%"
      },
      {
        "command": "spe.App.Credentials.createCert",
        "title": "%commands.spe.App.Credentials.createCert%"
      },
      {
        "command": "spe.App.Credentials.provideCert",
        "title": "%commands.spe.App.Credentials.provideCert%"
      },
      {
        "command": "spe.App.Credentials.deleteCert",
        "title": "%commands.spe.App.Credentials.deleteCert%"
      },
      {
        "command": "spe.App.Permissions.LocalAdminConsent.openLink",
        "title": "%commands.spe.App.Permissions.LocalAdminConsent.openLink%"
      },
      {
        "command": "spe.App.copyAppId",
        "title": "%commands.spe.App.copyAppId%"
      },
      {
        "command": "spe.App.viewInAzure",
        "title": "%commands.spe.App.viewInAzure%"
      },
      {
        "command": "spe.GuestApps.add",
        "title": "%commands.spe.GuestApps.add%",
        "icon": "$(plus)"
      },
      {
        "command": "spe.GuestApp.editPermissions",
        "title": "%commands.spe.GuestApp.editPermissions%"
      },
      {
        "command": "spe.Containers.create",
        "title": "%commands.spe.Containers.create%",
        "icon": "$(plus)"
      },
      {
        "command": "spe.Container.rename",
        "title": "%commands.spe.Container.rename%"
      },
      {
        "command": "spe.Container.editDescription",
        "title": "%commands.spe.Container.editDescription%"
      },
      {
        "command": "spe.Container.recycle",
        "title": "%commands.spe.Container.recycle%"
      },
      {
        "command": "spe.Container.copyId",
        "title": "%commands.spe.Container.copyId%"
      },
      {
        "command": "spe.Container.viewProperties",
        "title": "%commands.spe.Container.viewProperties%"
      },
      {
        "command": "spe.RecycledContainer.restore",
        "title": "%commands.spe.RecycledContainer.restore%"
      },
      {
        "command": "spe.RecycledContainer.delete",
        "title": "Permanently delete"
      },
      {
        "command": "spe.RecycledContainer.copyId",
        "title": "%commands.spe.RecycledContainer.copyId%"
      },
      {
        "command": "spe.refresh",
        "title": "%commands.spe.refresh%",
        "icon": "$(refresh)"
      },
      {
        "command": "spe.Resources.openDocumentation",
        "title": "Documentation",
        "icon": "$(book)"
      },
      {
        "command": "spe.Resources.openVideos",
        "title": "Video Tutorials",
        "icon": "$(play-circle)"
      }
    ],
    "walkthroughs": [
      {
        "id": "spe.gettingStarted",
        "title": "Try SharePoint Embedded",
        "description": "Store files in containers with a free trial container type.",
        "steps": [
          {
            "id": "spe.gettingStarted.signIn",
            "title": "Sign in with a work or school account",
            "description": "Use an account with the Global Administrator role.\n\n[Sign in](command:spe.login)",
            "when": "!spe:isLoggedIn",
            "media": {
							"markdown": "media/gettingStarted/signIn.md"
						},
						"completionEvents": [
							"onContext:spe:isAdmin"
						]
          },
          {
            "id": "spe.gettingStarted.signedIn",
            "title": "Sign in with a work or school account",
            "description": "Use an account with the Global Administrator role.",
            "when": "spe:isLoggedIn",
            "media": {
							"markdown": "media/gettingStarted/signIn.md"
						},
						"completionEvents": [
							"onContext:spe:isAdmin"
						]
          },
          {
            "id": "spe.gettingStarted.createContainerType",
            "title": "Create a trial container type",
            "description": "Create an Azure Entra app registration and trial container type to get started.\n\n[Create](command:spe.ContainerTypes.createTrial)",
            "media": {
							"markdown": "media/gettingStarted/createContainerType.md"
						},
            "completionEvents": [
              "onContext:spe:hasContainerTypes"
            ]
          },
          {
            "id": "spe.gettingStarted.registerContainerType",
            "title": "Register your container type",
            "description": "Allows your app to manage containers on your tenant. \n\n[Register](command:spe.ContainerType.registerOnLocalTenant)",
            "media": {
							"markdown": "media/gettingStarted/registerContainerType.md"
						},
            "completionEvents": [
              "onContext:spe:hasContainerTypeRegistrations"
            ]
          },
          {
            "id": "spe.gettingStarted.createContainer",
            "title": "Create your first storage container",
            "description": "All SharePoint Embedded content is stored in file storage containers\n\n[Create](command:spe.Containers.create)",
            "media": {
							"markdown": "media/gettingStarted/createContainer.md"
						},
            "completionEvents": [
              "onContext:spe:hasContainers"
            ]
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "bundle": "npm install -g @vscode/vsce && vsce package",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@types/chai": "^4.3.11",
    "@types/glob": "^8.1.0",
    "@types/jsrsasign": "^10.5.8",
    "@types/lodash": "^4.14.200",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/node-forge": "^1.3.4",
    "@types/sinon": "^17.0.3",
    "@types/temp": "^0.9.4",
    "@types/tmp": "^0.2.6",
    "@types/uuid": "^9.0.3",
    "@types/vscode": "^1.81.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.9",
    "chai": "^4.4.0",
    "esbuild": "^0.25.0",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.8.2",
    "sinon": "^17.0.1",
    "temp": "^0.9.4",
    "typescript": "^5.3.0-dev.20230825"
  },
  "dependencies": {
    "@azure/msal-node": "^2.9.2",
    "@microsoft/microsoft-graph-client": "^3.0.7",
    "@pnp/nodejs": "^3.17.0",
    "@pnp/queryable": "^3.17.0",
    "@pnp/sp": "^3.17.0",
    "@pnp/sp-admin": "^3.17.0",
    "@vscode/extension-telemetry": "^0.9.6",
    "axios": "^1.8.2",
    "date-fns": "^2.30.0",
    "jsrsasign": "^11.0.0",
    "jsrsasign-util": "^1.0.5",
    "jwt-decode": "^3.1.2",
    "lodash": "^4.17.21",
    "msal-node": "^0.0.1-security",
    "node-forge": "^1.3.1",
    "path": "^0.12.7",
    "tmp": "^0.2.3",
    "uuid": "^9.0.0"
  }
}
